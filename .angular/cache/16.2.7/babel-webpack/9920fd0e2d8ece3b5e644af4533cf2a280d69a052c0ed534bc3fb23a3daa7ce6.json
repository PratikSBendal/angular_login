{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AlertService {\n  constructor(router) {\n    this.router = router;\n    this.subject = new Subject();\n    this.showAfterRedirect = false;\n    // clear alert messages on route change unless 'showAfterRedirect' flag is true\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.showAfterRedirect) {\n          // only keep for a single route change\n          this.showAfterRedirect = false;\n        } else {\n          // clear alert message\n          this.clear();\n        }\n      }\n    });\n  }\n  onAlert() {\n    return this.subject.asObservable();\n  }\n  success(message, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({\n      type: 'success',\n      message\n    });\n  }\n  error(message, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({\n      type: 'error',\n      message\n    });\n  }\n  clear() {\n    // clear by calling subject.next() with null\n    this.subject.next(null);\n  }\n  static #_ = this.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["NavigationStart","Subject","AlertService","constructor","router","subject","showAfterRedirect","events","subscribe","event","clear","onAlert","asObservable","success","message","next","type","error","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["/home/pratik/Documents/angular/angular_login/src/app/__service/alert.service.ts"],"sourcesContent":["import { outputAst } from \"@angular/compiler\";\nimport { Injectable } from \"@angular/core\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AlertService {\n    private subject = new Subject<any>();\n    private showAfterRedirect = false;\nconstructor(private router : Router)\n{\n     // clear alert messages on route change unless 'showAfterRedirect' flag is true\n     this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n            if (this.showAfterRedirect) {\n                // only keep for a single route change\n                this.showAfterRedirect = false;\n            } else {\n                // clear alert message\n                this.clear();\n            }\n        }\n    });\n}\nonAlert():Observable<any>\n{\n    return this.subject.asObservable();\n}\nsuccess(message: string, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({ type: 'success', message });\n}\nerror(message: string, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({ type: 'error', message });\n}\nclear() {\n    // clear by calling subject.next() with null\n    this.subject.next(null);\n}\n}\n"],"mappings":"AAEA,SAAiBA,eAAe,QAAQ,iBAAiB;AACzD,SAAqBC,OAAO,QAAQ,MAAM;;;AAI1C,OAAM,MAAOC,YAAY;EAGzBC,YAAoBC,MAAe;IAAf,KAAAA,MAAM,GAANA,MAAM;IAFd,KAAAC,OAAO,GAAG,IAAIJ,OAAO,EAAO;IAC5B,KAAAK,iBAAiB,GAAG,KAAK;IAGhC;IACA,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAClC,IAAIA,KAAK,YAAYT,eAAe,EAAE;QAClC,IAAI,IAAI,CAACM,iBAAiB,EAAE;UACxB;UACA,IAAI,CAACA,iBAAiB,GAAG,KAAK;SACjC,MAAM;UACH;UACA,IAAI,CAACI,KAAK,EAAE;;;IAGxB,CAAC,CAAC;EACN;EACAC,OAAOA,CAAA;IAEH,OAAO,IAAI,CAACN,OAAO,CAACO,YAAY,EAAE;EACtC;EACAC,OAAOA,CAACC,OAAe,EAAER,iBAAiB,GAAG,KAAK;IAC9C,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACD,OAAO,CAACU,IAAI,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEF;IAAO,CAAE,CAAC;EACnD;EACAG,KAAKA,CAACH,OAAe,EAAER,iBAAiB,GAAG,KAAK;IAC5C,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACD,OAAO,CAACU,IAAI,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEF;IAAO,CAAE,CAAC;EACjD;EACAJ,KAAKA,CAAA;IACD;IACA,IAAI,CAACL,OAAO,CAACU,IAAI,CAAC,IAAI,CAAC;EAC3B;EAAC,QAAAG,CAAA,G;qBAjCYhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFC;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}