{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n    this.user = this.userSubject.asObservable();\n  }\n  get userValue() {\n    return this.userSubject.value;\n  }\n  login(username, password) {\n    return this.http.post(`${environment.apiUrl}/users/authenticate`, {\n      username,\n      password\n    }).pipe(map(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n      return user;\n    }));\n  }\n  logout() {\n    // remove user from local storage and set current user to null\n    localStorage.removeItem('user');\n    this.userSubject.next(null);\n    this.router.navigate(['/account/login']);\n  }\n  register1(user) {\n    return this.http.post(`${environment.apiUrl}/users/register`, user);\n  }\n  register(id, first_name, last_name, email, avatar) {\n    return this.http.post(`${environment.apiUrldumi}/data`, {\n      id,\n      first_name,\n      last_name,\n      email,\n      avatar\n    }).pipe(map(response => {\n      console.log(response);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${environment.apiUrldumi}/data${id}`);\n  }\n  dataTable() {\n    return this.http.get(`https://reqres.in/api/users?page=2`).pipe(map(response => {\n      console.log(response);\n    }));\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","map","environment","AccountService","constructor","router","http","userSubject","JSON","parse","localStorage","getItem","user","asObservable","userValue","value","login","username","password","post","apiUrl","pipe","setItem","stringify","next","logout","removeItem","navigate","register1","register","id","first_name","last_name","email","avatar","apiUrldumi","response","console","log","delete","dataTable","get","_","i0","ɵɵinject","i1","Router","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pratik/Documents/angular/angular_login/src/app/__service/account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '@app/__model/user';\nimport { Registration } from '@app/__model/registration';\nimport { ResDataModal } from '@app/__model/datatable';\nimport { environment } from 'src/env';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AccountService {\n    private userSubject: BehaviorSubject<User | null>;\n    public user: Observable<User | null>;\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ){\n        this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')!));\n        this.user = this.userSubject.asObservable();\n\n    }\n    public get userValue()\n    {\n        return this.userSubject.value;\n    }\n    login(username:string,password:string)\n    {\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`,{username,password})\n        .pipe(map(user => {\n                            // store user details and jwt token in local storage to keep user logged in between page refreshes\n                            localStorage.setItem('user', JSON.stringify(user));\n                            this.userSubject.next(user);\n                            return user;\n            \n        }))\n    }\n    logout()\n    {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register1(user :User)\n    {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    register(id:number,first_name:string,last_name:string,email:string,avatar:string)\n    {\n        return this.http.post<Registration>(`${environment.apiUrldumi}/data`,{id,first_name,last_name,email,avatar}).pipe(map((response :any)=>{\n            console.log(response);\n        }));\n    }\n    delete(id:number)\n    {\n        return this.http.delete<Registration>(`${environment.apiUrldumi}/data${id}`)\n    }\n    dataTable ()\n    {\n        return this.http.get<ResDataModal>(`https://reqres.in/api/users?page=2`).pipe(map((response : any)=>{\n            console.log(response);\n        }));\n    }\n}\n\n"],"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;AAIpC,SAASC,WAAW,QAAQ,SAAS;;;;AAIrC,OAAM,MAAOC,cAAc;EAGvBC,YACYC,MAAc,EACdC,IAAgB;IADhB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IAEZ,IAAI,CAACC,WAAW,GAAG,IAAIP,eAAe,CAACQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;IACjF,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;EAE/C;EACA,IAAWC,SAASA,CAAA;IAEhB,OAAO,IAAI,CAACP,WAAW,CAACQ,KAAK;EACjC;EACAC,KAAKA,CAACC,QAAe,EAACC,QAAe;IAEjC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAO,GAAGjB,WAAW,CAACkB,MAAM,qBAAqB,EAAC;MAACH,QAAQ;MAACC;IAAQ,CAAC,CAAC,CAC1FG,IAAI,CAACpB,GAAG,CAACW,IAAI,IAAG;MACG;MACAF,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACX,IAAI,CAAC,CAAC;MAClD,IAAI,CAACL,WAAW,CAACiB,IAAI,CAACZ,IAAI,CAAC;MAC3B,OAAOA,IAAI;IAE/B,CAAC,CAAC,CAAC;EACP;EACAa,MAAMA,CAAA;IAEF;IACAf,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACnB,WAAW,CAACiB,IAAI,CAAC,IAAI,CAAC;IAC3B,IAAI,CAACnB,MAAM,CAACsB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EAC5C;EAEAC,SAASA,CAAChB,IAAU;IAEhB,OAAO,IAAI,CAACN,IAAI,CAACa,IAAI,CAAC,GAAGjB,WAAW,CAACkB,MAAM,iBAAiB,EAAER,IAAI,CAAC;EACvE;EAEAiB,QAAQA,CAACC,EAAS,EAACC,UAAiB,EAACC,SAAgB,EAACC,KAAY,EAACC,MAAa;IAE5E,OAAO,IAAI,CAAC5B,IAAI,CAACa,IAAI,CAAe,GAAGjB,WAAW,CAACiC,UAAU,OAAO,EAAC;MAACL,EAAE;MAACC,UAAU;MAACC,SAAS;MAACC,KAAK;MAACC;IAAM,CAAC,CAAC,CAACb,IAAI,CAACpB,GAAG,CAAEmC,QAAa,IAAG;MACnIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EACAG,MAAMA,CAACT,EAAS;IAEZ,OAAO,IAAI,CAACxB,IAAI,CAACiC,MAAM,CAAe,GAAGrC,WAAW,CAACiC,UAAU,QAAQL,EAAE,EAAE,CAAC;EAChF;EACAU,SAASA,CAAA;IAEL,OAAO,IAAI,CAAClC,IAAI,CAACmC,GAAG,CAAe,oCAAoC,CAAC,CAACpB,IAAI,CAACpB,GAAG,CAAEmC,QAAc,IAAG;MAChGC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAAC,QAAAM,CAAA,G;qBAtDQvC,cAAc,EAAAwC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd9C,cAAc;IAAA+C,OAAA,EAAd/C,cAAc,CAAAgD,IAAA;IAAAC,UAAA,EAFD;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}