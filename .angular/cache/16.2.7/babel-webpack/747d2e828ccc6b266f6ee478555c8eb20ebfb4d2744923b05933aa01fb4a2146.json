{"ast":null,"code":"import { HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\n// let users = [{ id: 1, firstName: 'Jason', lastName: 'Watmore', username: 'test', password: 'test' }];\nconst usersKey = 'angular-tutorial-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\nexport class FakeBackendInterceptor {\n  intercept(request, next) {\n    const {\n      url,\n      method,\n      headers,\n      body\n    } = request;\n    return handleRoute();\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/users/authenticate') && method === 'POST':\n          return authenticate();\n        case url.endsWith('/users/register') && method === 'POST':\n          return register();\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n    // route function\n    function authenticate() {\n      const {\n        username,\n        password\n      } = body;\n      const user = users.find(x => x.username == username && x.password == password);\n      if (!user) return error('username or password is incorrect');\n      return ok({\n        ...basicDetails(user),\n        token: 'fake-jwt-token'\n      });\n    }\n    function register() {\n      const user = body;\n      if (users.find(x => x.username === user.username)) {\n        return error('Username \"' + user.username + '\" is already taken');\n      }\n      user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n      users.push(user);\n      localStorage.setItem(usersKey, JSON.stringify(users));\n      return ok();\n    }\n    // helper function\n    function ok(body) {\n      return of(new HttpResponse({\n        status: 200,\n        body\n      })).pipe(delay(500)); // delay observable to simulate server api call\n    }\n\n    function error(message) {\n      return throwError(() => ({\n        error: {\n          message\n        }\n      })).pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n    }\n\n    function basicDetails(user) {\n      const {\n        id,\n        username,\n        firstName,\n        lastName\n      } = user;\n      return {\n        id,\n        username,\n        firstName,\n        lastName\n      };\n    }\n  }\n  static #_ = this.ɵfac = function FakeBackendInterceptor_Factory(t) {\n    return new (t || FakeBackendInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FakeBackendInterceptor,\n    factory: FakeBackendInterceptor.ɵfac\n  });\n}\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true\n};","map":{"version":3,"names":["HttpResponse","HTTP_INTERCEPTORS","of","throwError","delay","materialize","dematerialize","usersKey","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","intercept","request","next","url","method","headers","body","handleRoute","endsWith","authenticate","register","handle","username","password","user","find","x","error","ok","basicDetails","token","id","length","Math","max","map","push","setItem","stringify","status","pipe","message","firstName","lastName","_","_2","factory","ɵfac","fakeBackendProvider","provide","useClass","multi"],"sources":["/home/pratik/Documents/angular/angular_login/src/app/__helper/fakebackend.ts"],"sourcesContent":["import { Injectable, booleanAttribute } from '@angular/core';\nimport { HttpRequest, HttpResponse , HttpHandler , HttpEvent , HttpInterceptor, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { Observable , of , throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\n\n// let users = [{ id: 1, firstName: 'Jason', lastName: 'Watmore', username: 'test', password: 'test' }];\nconst usersKey = 'angular-tutorial-users';\nlet users: any[] = JSON.parse(localStorage.getItem(usersKey)!) || [];\n@Injectable()\n\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        return handleRoute();\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n    }\n   // route function\n    function authenticate()\n    {\n        const { username, password } = body;\n        const user = users.find(x=>x.username==username && x.password==password)\n        if (!user) return error('username or password is incorrect');    \n        return ok ({\n            ...basicDetails(user),\n                token: 'fake-jwt-token'\n        })\n       \n    }\n    function register() {\n        const user = body\n\n        if (users.find(x => x.username === user.username)) {\n            return error('Username \"' + user.username + '\" is already taken')\n        }\n\n        user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        users.push(user);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n        return ok();\n    }\n\n    // helper function\n    function ok(body?: any) {\n        return of(new HttpResponse({ status: 200, body }))\n            .pipe(delay(500)); // delay observable to simulate server api call\n    }\n\n    function error(message: string) {\n        return throwError(() => ({ error: { message } }))\n            .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n    }\n\n    function basicDetails(user: any) {\n        const { id, username, firstName, lastName } = user;\n        return { id, username, firstName, lastName };\n    }\n}\n} \n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};"],"mappings":"AACA,SAAsBA,YAAY,EAA8CC,iBAAiB,QAAO,sBAAsB;AAC9H,SAAsBC,EAAE,EAAGC,UAAU,QAAQ,MAAM;AACnD,SAASC,KAAK,EAAEC,WAAW,EAAEC,aAAa,QAAQ,gBAAgB;;AAElE;AACA,MAAMC,QAAQ,GAAG,wBAAwB;AACzC,IAAIC,KAAK,GAAUC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,QAAQ,CAAE,CAAC,IAAI,EAAE;AAGpE,OAAM,MAAOM,sBAAsB;EAC/BC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IAClD,MAAM;MAAEC,GAAG;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAI,CAAE,GAAGL,OAAO;IAE9C,OAAOM,WAAW,EAAE;IAEpB,SAASA,WAAWA,CAAA;MAChB,QAAQ,IAAI;QACR,KAAKJ,GAAG,CAACK,QAAQ,CAAC,qBAAqB,CAAC,IAAIJ,MAAM,KAAK,MAAM;UACzD,OAAOK,YAAY,EAAE;QACzB,KAAKN,GAAG,CAACK,QAAQ,CAAC,iBAAiB,CAAC,IAAIJ,MAAM,KAAK,MAAM;UACrD,OAAOM,QAAQ,EAAE;QACrB;UACI;UACA,OAAOR,IAAI,CAACS,MAAM,CAACV,OAAO,CAAC;;IAE3C;IACD;IACC,SAASQ,YAAYA,CAAA;MAEjB,MAAM;QAAEG,QAAQ;QAAEC;MAAQ,CAAE,GAAGP,IAAI;MACnC,MAAMQ,IAAI,GAAGpB,KAAK,CAACqB,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACJ,QAAQ,IAAEA,QAAQ,IAAII,CAAC,CAACH,QAAQ,IAAEA,QAAQ,CAAC;MACxE,IAAI,CAACC,IAAI,EAAE,OAAOG,KAAK,CAAC,mCAAmC,CAAC;MAC5D,OAAOC,EAAE,CAAE;QACP,GAAGC,YAAY,CAACL,IAAI,CAAC;QACjBM,KAAK,EAAE;OACd,CAAC;IAEN;IACA,SAASV,QAAQA,CAAA;MACb,MAAMI,IAAI,GAAGR,IAAI;MAEjB,IAAIZ,KAAK,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKE,IAAI,CAACF,QAAQ,CAAC,EAAE;QAC/C,OAAOK,KAAK,CAAC,YAAY,GAAGH,IAAI,CAACF,QAAQ,GAAG,oBAAoB,CAAC;;MAGrEE,IAAI,CAACO,EAAE,GAAG3B,KAAK,CAAC4B,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG9B,KAAK,CAAC+B,GAAG,CAACT,CAAC,IAAIA,CAAC,CAACK,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAClE3B,KAAK,CAACgC,IAAI,CAACZ,IAAI,CAAC;MAChBjB,YAAY,CAAC8B,OAAO,CAAClC,QAAQ,EAAEE,IAAI,CAACiC,SAAS,CAAClC,KAAK,CAAC,CAAC;MACrD,OAAOwB,EAAE,EAAE;IACf;IAEA;IACA,SAASA,EAAEA,CAACZ,IAAU;MAClB,OAAOlB,EAAE,CAAC,IAAIF,YAAY,CAAC;QAAE2C,MAAM,EAAE,GAAG;QAAEvB;MAAI,CAAE,CAAC,CAAC,CAC7CwB,IAAI,CAACxC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B;;IAEA,SAAS2B,KAAKA,CAACc,OAAe;MAC1B,OAAO1C,UAAU,CAAC,OAAO;QAAE4B,KAAK,EAAE;UAAEc;QAAO;MAAE,CAAE,CAAC,CAAC,CAC5CD,IAAI,CAACvC,WAAW,EAAE,EAAED,KAAK,CAAC,GAAG,CAAC,EAAEE,aAAa,EAAE,CAAC,CAAC,CAAC;IAC3D;;IAEA,SAAS2B,YAAYA,CAACL,IAAS;MAC3B,MAAM;QAAEO,EAAE;QAAET,QAAQ;QAAEoB,SAAS;QAAEC;MAAQ,CAAE,GAAGnB,IAAI;MAClD,OAAO;QAAEO,EAAE;QAAET,QAAQ;QAAEoB,SAAS;QAAEC;MAAQ,CAAE;IAChD;EACJ;EAAC,QAAAC,CAAA,G;qBAzDYnC,sBAAsB;EAAA;EAAA,QAAAoC,EAAA,G;WAAtBpC,sBAAsB;IAAAqC,OAAA,EAAtBrC,sBAAsB,CAAAsC;EAAA;;AA4DnC,OAAO,MAAMC,mBAAmB,GAAG;EAC/B;EACAC,OAAO,EAAEpD,iBAAiB;EAC1BqD,QAAQ,EAAEzC,sBAAsB;EAChC0C,KAAK,EAAE;CACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}