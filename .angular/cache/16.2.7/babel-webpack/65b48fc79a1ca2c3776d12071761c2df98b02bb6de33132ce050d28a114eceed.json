{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/__service/account.service\";\nimport * as i4 from \"@app/__service/alert.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n  }\n}\nfunction LoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_15_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nfunction LoginComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n    // redirect to home if already logged in\n    if (this.accountService.userValue) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    // show success message after registration\n    if (this.route.snapshot.queryParams.registered) {\n      this.success = 'Registration successful';\n    }\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alert on submit\n    // this.error = '';\n    // this.success = '';\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      error: error => {\n        this.error = error;\n        this.loading = false;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.AlertService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 22,\n    vars: 11,\n    consts: [[1, \"container\", \"col-md-6\", \"offset-md-3\", \"mt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\")(17, \"button\", 10);\n        i0.ɵɵtemplate(18, LoginComponent_span_18_Template, 1, 0, \"span\", 11);\n        i0.ɵɵtext(19, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"a\", 12);\n        i0.ɵɵtext(21, \"Register\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.username.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Validators","first","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_10_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","username","errors","required","LoginComponent_div_15_div_1_Template","ctx_r1","password","ɵɵelement","LoginComponent","constructor","formBuilder","route","router","accountService","alertService","loading","submitted","userValue","navigate","ngOnInit","form","group","snapshot","queryParams","registered","success","controls","onSubmit","clear","invalid","login","value","pipe","subscribe","next","returnUrl","navigateByUrl","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","AccountService","i4","AlertService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","LoginComponent_div_10_Template","LoginComponent_div_15_Template","LoginComponent_span_18_Template","ɵɵpureFunction1","_c0"],"sources":["/home/pratik/Documents/angular/angular_login/src/app/account/login.component.ts","/home/pratik/Documents/angular/angular_login/src/app/account/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '@app/__service/account.service';\nimport { AlertService } from '@app/__service/alert.service';\nimport { first } from 'rxjs';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit { \n    form!: FormGroup;\n    loading = false;\n    submitted = false;\n    error?: string;\n    success?: string;\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.userValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n         // show success message after registration\n    if (this.route.snapshot.queryParams.registered) {\n        this.success = 'Registration successful';\n    }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alert on submit\n        // this.error = '';\n        // this.success = '';\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from query parameters or default to home page\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n                    this.router.navigateByUrl(returnUrl);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n}","<div class=\"container col-md-6 offset-md-3 mt-5\">\n    <!-- <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n    <div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div> -->\n    <div class=\"card\">\n        <h4 class=\"card-header\">Login</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\">Username</label>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"mb-3\">\n                    <label class=\"form-label\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <div>\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                        Login\n                    </button>\n                    <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}