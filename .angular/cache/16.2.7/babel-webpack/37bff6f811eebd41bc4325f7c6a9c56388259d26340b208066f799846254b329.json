{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/__service/account.service\";\nexport class AuthGuard {\n  constructor(router, accountService) {\n    this.router = router;\n    this.accountService = accountService;\n  }\n  canActivate(route, state) {\n    const user = this.accountService.userValue;\n    if (user) {\n      // authorised so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/account/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AccountService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","accountService","canActivate","route","state","user","userValue","navigate","queryParams","returnUrl","url","_","i0","ɵɵinject","i1","Router","i2","AccountService","_2","factory","ɵfac","providedIn"],"sources":["/home/pratik/Documents/angular/angular_login/src/app/__helper/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/__service/account.service'\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        if (user) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}"],"mappings":";;;AAMA,OAAM,MAAOA,SAAS;EAClBC,YACYC,MAAc,EACdC,cAA8B;IAD9B,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;EACtB;EAEJC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACjE,MAAMC,IAAI,GAAG,IAAI,CAACJ,cAAc,CAACK,SAAS;IAC1C,IAAID,IAAI,EAAE;MACN;MACA,OAAO,IAAI;;IAGf;IACA,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,SAAS,EAAEL,KAAK,CAACM;MAAG;IAAE,CAAE,CAAC;IACnF,OAAO,KAAK;EAChB;EAAC,QAAAC,CAAA,G;qBAhBQb,SAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATpB,SAAS;IAAAqB,OAAA,EAATrB,SAAS,CAAAsB,IAAA;IAAAC,UAAA,EADI;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}